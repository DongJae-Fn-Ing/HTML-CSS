#wrap{
    margin: 0 auto; position: relative;
    width: 300px; height: 200px;
    background-color: #999;
    overflow-y: hidden;/*스크롤도 사용 가능하고
    다량의 컨텐츠를 조절할 때 좁은 공간에서 화면을 넘어 갈때 
    자른다 */
}
#wrap div{
    width: 150px; height: 150px;
    position: absolute;
}
#wrap .redBox{
background-color:salmon; left: 10px; top: 10px;
z-index: 100;
}/*우선순위 먼저 코드를 짜면 아래로 깔린다
z-index를 쓰면 우선 순위를 바꾸고 싶을때
z-index 값이 크면 클수록 맨위로 올라온다
보통 4단계를 사용한다 최대제한 9999
계층을 미리 만들어 놓으면 나중에 쳬계적으로 사용이 가능하다*/
#wrap .greenBox{
    background-color: green; left: 50px; top: 50px;
    z-index: 10;
}
#wrap .blueBox{
    background-color: blue; left: 90px; top: 90px;
    z-index: 1;
}

	/*
		좌표의 기준이 될 부모의 객체에 position:relative; 를 선언
		그것을 기준으로 움직일 자식 객체에게 position:absolute; 를 선언
		그렇게 되면 부모객체의 위치를 기준으로 자식객체가 움직이게 됨
		
		부모객체의 높이를 정해주면 자식객체가 부모객체를 뚫고 나오는 현상을 방지할수있음.
		만약 잘리는 부분을 scroll 로 처리하고 싶다면 overflow에 scroll을, 잘리게 둘 것이라면
		hidden;을 부여한다.
	*/